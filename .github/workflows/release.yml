name: Build release
on:
  push:
    branches: [ android ]
  pull_request:
    branches: [ android ]
    paths:
      - '.github/**'
      - 'app/**'
      - 'gradle/**'
      - '*.properties'
      - '*.gradle'
      - 'gradlew'
      - 'gradlew.bat'

jobs:
  generate-release-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Decrypt secrets
        run: release/signing-setup.sh "$ENCRYPT_KEY"
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Download gradle dependencies
        run: ./gradlew dependencies

      - name: Build Release app
        run: ./gradlew :app:assembleRelease

      - name: Send APK to Telegram
        run: release/deploy-telegram.sh
        env:
          TG_TO: ${{ secrets.TELEGRAM_TO }}
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TG_FILE: ./app/build/outputs/apk/release/app-release.apk
      
      - name: Send changelog to Telegram
        run: release/changelog-telegram.sh
        env:
          TG_TO: ${{ secrets.TELEGRAM_TO }}
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh