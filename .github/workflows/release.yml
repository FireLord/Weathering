name: Build release

on:
  push:
    branches: [android]
  pull_request:
    branches: [android]
    paths:
      - '.github/**'
      - 'app/**'
      - 'gradle/**'
      - '*.properties'
      - '*.gradle'
      - 'gradlew'
      - 'gradlew.bat'

jobs:
  generate-release-build:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[release build]')"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Decrypt secrets
        run: release/signing-setup.sh "$ENCRYPT_KEY"
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Build Release app
        run: ./gradlew :app:assembleRelease

      - name: Send APK to Telegram
        if: github.event_name == 'push'  # Only execute for push events, not pull requests
        run: release/deploy-telegram.sh
        env:
          TG_TO: ${{ secrets.TELEGRAM_TO }}
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TG_FILE: ./app/build/outputs/apk/release/app-release.apk

      - name: Send changelog to Telegram
        if: github.event_name == 'push'  # Only execute for push events, not pull requests
        run: release/changelog-telegram.sh
        env:
          TG_TO: ${{ secrets.TELEGRAM_TO }}
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh